generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model currencies {
  code   String @id @db.VarChar(3)
  name   String @db.VarChar(50)
  symbol String @db.VarChar(10)
}

model users {
  id                    Int            @id @unique @default(autoincrement())
  username              String         @unique @db.VarChar(50)
  password_hash         String         @db.VarChar(255)
  created_at            DateTime?      @default(now()) @db.Timestamptz(6)
  default_currency_code String?        @db.VarChar(3)
  categories            categories[]
  transactions          transactions[]
}

model categories {
  id                 Int                 @id(map: "cartegories_pkey") @default(autoincrement())
  name               String              @unique(map: "cartegories_name_key") @db.VarChar(100)
  user_id            Int
  template_id        Int?
  is_active          Boolean?            @default(true)
  created_at         DateTime            @default(now()) @db.Timestamp(6)
  category_templates category_templates? @relation(fields: [template_id], references: [id], onUpdate: NoAction, map: "fk_template")
  users              users               @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_user")
  transactions       transactions[]
}

model category_templates {
  id         Int          @id(map: "categorytemplates_pkey") @default(autoincrement())
  name       String       @unique(map: "categorytemplates_name_key") @db.VarChar(100)
  is_default Boolean?     @default(true)
  is_active  Boolean?     @default(true)
  categories categories[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model transactions {
  id               Int        @id @default(autoincrement())
  name             String     @db.VarChar(200)
  category_id      Int
  amount           Decimal    @db.Decimal(12, 2)
  user_id          Int
  type             String?    @db.VarChar(100)
  notes            String?    @db.VarChar(200)
  created_at       DateTime?  @default(now()) @db.Timestamptz(6)
  updated_at       DateTime?  @default(now()) @db.Timestamptz(6)
  transaction_date DateTime   @default(dbgenerated("CURRENT_DATE")) @db.Date
  categories       categories @relation(fields: [category_id], references: [id], onUpdate: NoAction, map: "fk_category")
  users            users      @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_user")
}
